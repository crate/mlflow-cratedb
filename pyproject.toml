# ==================
# Project definition
# ==================

# Derived from https://peps.python.org/pep-0621/

[build-system]
build-backend = "setuptools.build_meta"
requires = [
  "setuptools>=42", # At least v42 of setuptools required.
  "versioningit",
]

[project]
name = "mlflow-cratedb"
description = "MLflow adapter for CrateDB"
readme = "README.md"
keywords = [
  "ai",
  "cratedb",
  "databricks",
  "machine learning",
  "ml",
  "ml-ops",
  "mlflow",
  "mlflow-tracking",
  "mlops",
]
license = { text = "Apache License 2.0" }
authors = [
  { name = "Andreas Motl", email = "andreas.motl@crate.io" },
]
requires-python = ">=3.8,<3.12"
classifiers = [
  "Development Status :: 4 - Beta",
  "Environment :: Console",
  "Intended Audience :: Developers",
  "Intended Audience :: Education",
  "Intended Audience :: Information Technology",
  "Intended Audience :: Telecommunications Industry",
  "License :: OSI Approved :: Apache Software License",
  "Operating System :: MacOS :: MacOS X",
  "Operating System :: POSIX :: Linux",
  "Operating System :: Unix",
  "Programming Language :: Python",
  "Programming Language :: Python :: 3 :: Only",
  "Programming Language :: Python :: 3.8",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Topic :: Communications",
  "Topic :: Database",
  "Topic :: Database :: Database Engines/Servers",
  "Topic :: Database :: Front-Ends",
  "Topic :: Education",
  "Topic :: Scientific/Engineering",
  "Topic :: Scientific/Engineering :: Artificial Intelligence",
  "Topic :: Scientific/Engineering :: Information Analysis",
  "Topic :: Scientific/Engineering :: Interface Engine/Protocol Translator",
  "Topic :: Software Development :: Libraries",
  "Topic :: Software Development :: Quality Assurance",
  "Topic :: Software Development :: Version Control",
  "Topic :: System :: Archiving",
  "Topic :: System :: Clustering",
  "Topic :: System :: Distributed Computing",
  "Topic :: Text Processing",
  "Topic :: Utilities",
]

dynamic = [
  "version",
]

dependencies = [
  "crash",
  "dask>=2024.4.1",
  "joblib!=1.4.0,<1.5",
  "mlflow==2.14.1",
  "sqlalchemy-cratedb>=0.38.0,<1",
  "sqlparse<0.6",
]

optional-dependencies.develop = [
  "mypy<1.15",
  "poethepoet<1",
  "pyproject-fmt<2.6",
  "ruff<0.10",
  "validate-pyproject<0.24",
]
optional-dependencies.examples = [
  "pycaret[analysis,models,parallel,test,tuner]==3.3.2; platform_machine!='aarch64'",
  "salesforce-merlion<2.1",
  "werkzeug==2.2.3",
]
optional-dependencies.release = [
  "build<2",
  "twine<7",
]
optional-dependencies.test = [
  "psutil==5.9.8",
  "pytest<9",
  "pytest-cov<7",
]
urls.changelog = "https://github.com/crate/mlflow-cratedb/blob/main/CHANGES.md"
urls.documentation = "https://github.com/crate/mlflow-cratedb"
urls.homepage = "https://github.com/crate/mlflow-cratedb"
urls.repository = "https://github.com/crate/mlflow-cratedb"
scripts.mlflow-cratedb = "mlflow_cratedb.cli:cli"
entry-points."mlflow.app".mlflow-cratedb = "mlflow_cratedb.server:app"

[tool.setuptools]
# https://setuptools.pypa.io/en/latest/userguide/package_discovery.html
packages = [ "mlflow_cratedb" ]

[tool.ruff]
line-length = 120

extend-exclude = [
  "tests/test_tracking.py",
]

lint.select = [
  # Builtins
  "A",
  # Bugbear
  "B",
  # comprehensions
  "C4",
  # Pycodestyle
  "E",
  # eradicate
  "ERA",
  # Pyflakes
  "F",
  # isort
  "I",
  # pandas-vet
  "PD",
  # return
  "RET",
  # Bandit
  "S",
  # print
  "T20",
  "W",
  # flake8-2020
  "YTT",
]

lint.per-file-ignores."tests/*" = [ "S101" ]           # Use of `assert` detected
lint.per-file-ignores."tests/conftest.py" = [ "E402" ] # Module level import not at top of file

[tool.pytest.ini_options]
minversion = "2.0"
addopts = """
  -rfEX -p pytester --strict-markers --verbosity=3
  --capture=no
  --cov --cov-report=term-missing --cov-report=xml
  """
log_level = "DEBUG"
log_cli_level = "DEBUG"
testpaths = [ "tests" ]
xfail_strict = true
markers = [
  "examples",
  "notrackingurimock",
  "slow",
]

[tool.coverage.run]
branch = false
source = [ "mlflow_cratedb" ]
omit = [
  "tests/*",
]

[tool.coverage.report]
fail_under = 0
show_missing = true

[tool.mypy]
packages = [ "mlflow_cratedb" ]
exclude = [
]
check_untyped_defs = true
ignore_missing_imports = true
implicit_optional = true
install_types = true
no_implicit_optional = true
non_interactive = true
show_error_codes = true
strict_equality = true
warn_unused_ignores = true
warn_redundant_casts = true

[tool.versioningit.vcs]
method = "git"
default-tag = "0.0.0"

# ===================
# Tasks configuration
# ===================

[tool.poe.tasks]
format = [
  { cmd = "ruff format ." },
  # Configure Ruff not to auto-fix (remove!):
  # Ignore unused imports (F401), unused variables (F841), `print` statements (T201), and commented-out code (ERA001).
  { cmd = "ruff check --fix --ignore=ERA --ignore=F401 --ignore=F841 --ignore=T20 --ignore=ERA001 ." },
  { cmd = "pyproject-fmt --keep-full-version pyproject.toml" },
]

lint = [
  { cmd = "ruff format --check ." },
  { cmd = "ruff check ." },
  { cmd = "validate-pyproject pyproject.toml" },
  { cmd = "mypy" },
]
test = [
  { cmd = "pytest" },
]
test-fast = [
  { cmd = "pytest -m 'not slow'" },
]
build = { cmd = "python -m build" }
check = [ "lint", "test" ]
check-fast = [ "lint", "test-fast" ]

release = [
  { cmd = "python -m build" },
  { cmd = "twine upload --skip-existing dist/*.tar.gz dist/*.whl" },
]
